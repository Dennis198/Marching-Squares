{"version":3,"sources":["Marching-Square/Field/square.js","Marching-Square/Field/field.js","Marching-Square/marching-square.js","App.js","reportWebVitals.js","index.js"],"names":["Square","rows","cols","width","this","states","Array","fill","map","x","y","topLeft_V","topRight_V","bottomRight_V","bottomLeft_V","point_A","point_B","point_C","point_D","getState","drawLine","start","end","context","document","getElementById","getContext","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","a","b","c","d","Field","field","createField","sqaure","i","length","j","Math","floor","random","isFinished","drawBackGround","draw","canvas","fillStyle","fillRect","height","arc","PI","drawLines","index","PrettoSlider","withStyles","root","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","top","background","track","borderRadius","rail","Slider","CANVAS_WIDTH","CANVAS_HEIGHT","MarchingSquare","props","intervalID","indexNextStep","state","isRunning","mouseDown","resolution","success","setState","setInterval","drawAnimation","stop","clearInterval","e","val","reset","setTimeout","pos","getMousePos","round","switchCellValue","evt","rect","getBoundingClientRect","clientX","clientY","setAllCellstoBackGround","className","Button","disabled","variant","onClick","drawAnimate","drawNextStep","setAllpointsToBackGround","setRandomPoints","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","handleResolutionChange","id","onMouseDown","allowSwitchColorOnMoveOnCanvas","onMouseUp","onMouseMove","mouseMove","onClickEvent","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ccacc873.chunk.js","sourcesContent":["/**\r\n * This File handles the computes of the Square of the marching sqaure algorithm\r\n */\r\nexport default class Square{\r\n    constructor(rows,cols,width){\r\n        this.width=width;\r\n        this.states=new Array(rows).fill(0).map(() => new Array(cols).fill(0));\r\n    }\r\n\r\n    //Draws the Lines of 16 differet Cases of the marching sqaure algorithm\r\n    // topLeft_V -- point_A -- topRight_V\r\n    //     |                        |\r\n    //  point_D                  point_B\r\n    //     |                        |\r\n    // bottomLeft -- point_C -- bottomRoght\r\n    drawLines(x,y,topLeft_V,topRight_V,bottomRight_V,bottomLeft_V){\r\n        let point_A = {x: x+this.width*0.5, y:y};\r\n        let point_B = {x: x+this.width, y:y+this.width*0.5};\r\n        let point_C = {x: x+this.width*0.5, y:y+this.width};\r\n        let point_D = {x: x, y:y+this.width*0.5};\r\n        switch(this.getState(topLeft_V,topRight_V,bottomRight_V,bottomLeft_V)){\r\n            case 1:\r\n                this.drawLine(point_C, point_D);\r\n                break;\r\n            case 2:\r\n                this.drawLine(point_B, point_C);\r\n                break;\r\n            case 3:\r\n                this.drawLine(point_B, point_D);\r\n                break;\r\n            case 4:\r\n                this.drawLine(point_A, point_B);\r\n                break;\r\n            case 5:\r\n                this.drawLine(point_A, point_D);\r\n                this.drawLine(point_B, point_C);\r\n                break;\r\n            case 6:\r\n                this.drawLine(point_A, point_C);\r\n                break;\r\n            case 7:\r\n                this.drawLine(point_A, point_D);\r\n                break;\r\n            case 8:\r\n                this.drawLine(point_A, point_D);\r\n                break;\r\n            case 9:\r\n                this.drawLine(point_A, point_C);\r\n                break;\r\n            case 10:\r\n                this.drawLine(point_A, point_B);\r\n                this.drawLine(point_C, point_D);\r\n                break;\r\n            case 11:\r\n                this.drawLine(point_A, point_B);\r\n                break;\r\n            case 12:\r\n                this.drawLine(point_B, point_D);\r\n                break;\r\n            case 13:\r\n                this.drawLine(point_B, point_C);\r\n                break;\r\n            case 14:\r\n                this.drawLine(point_C, point_D);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Draws a Square for the animation (Currently not in use)\r\n    /*\r\n    drawSquare(x,y){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.fillStyle = \"red\";\r\n        context.fillRect(x,y,this.width,this.width);\r\n        context.stroke();      \r\n    }*/\r\n\r\n    //Draws a line from start to End\r\n    drawLine(start, end){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.strokeStyle=\"black\";\r\n        context.lineWidth=3 ;\r\n        context.beginPath();\r\n        context.moveTo(start.x, start.y);\r\n        context.lineTo(end.x, end.y);\r\n        context.stroke();\r\n    }\r\n\r\n    //Calculates the state of the current square (DEC => BIN)\r\n    getState(a,b,c,d){\r\n        return a*8 + b*4 + c*2 + d*1;\r\n    }\r\n}","/**\r\n * This file handles the marching square algorithm\r\n */\r\nimport Square from \"./square\";\r\n\r\nexport default class Field{\r\n    constructor(rows,cols,width){\r\n        this.field = this.createField(rows,cols,width);\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n        this.width=width;\r\n        this.sqaure=new Square(rows-1,cols-1,width);\r\n    }\r\n\r\n    //Creates the initial Field\r\n    createField(rows,cols){\r\n        let field = new Array(rows);\r\n        for(let i=0;i<field.length;i++){\r\n            field[i]= new Array(cols);\r\n            for(let j=0;j<field[i].length;j++){\r\n                field[i][j]=(Math.floor((Math.random()*2)));\r\n            }\r\n        }\r\n        return field;\r\n    }\r\n\r\n    //Switches the Value of the Field field[i][j]\r\n    switchCellValue(i,j, isFinished){\r\n        this.field[i][j]=0;//(this.field[i][j]+1)%2\r\n        this.drawBackGround();\r\n        if(isFinished){\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    //Sets all the Cells to 1 (Background blue)\r\n    setAllCellstoBackGround(){\r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                this.field[i][j]=1;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Draws the Background of the Canvas (Only Points) and Background\r\n    drawBackGround(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.fillStyle = \"#ADD8E6\";\r\n        context.fillRect(0,0,canvas.width,canvas.height);\r\n        context.stroke(); \r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                if(this.field[i][j]===1){\r\n                    context.fillStyle =`#1E90FF`;//Blue\r\n                } else {\r\n                    context.fillStyle =`#DC143C`;//Red\r\n                }               \r\n                context.beginPath();\r\n                let x = j*this.width;\r\n                let y = i*this.width;\r\n                context.arc(x, y, this.width/4, 0, 2*Math.PI);\r\n                context.fill();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Execute the Marching sqaure algorithm\r\n    draw(){\r\n        for(let i=0;i<this.field.length-1;i++){\r\n            for(let j=0;j<this.field[0].length-1;j++){\r\n                let x = j*this.width;\r\n                let y = i*this.width;\r\n                this.sqaure.drawLines(x,y,this.field[i][j],this.field[i][j+1],this.field[i+1][j+1],this.field[i+1][j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Execute one/(next) step of the Marching sqaure\r\n    drawAnimation(index){\r\n        let i = Math.floor(index/this.cols);\r\n        let j = Math.floor(index%this.cols);\r\n        if(i===this.field.length-2&&j===this.field[0].length-1)return false;\r\n        let x = j*this.width;\r\n        let y = i*this.width;\r\n        this.sqaure.drawLines(x,y,this.field[i][j],this.field[i][j+1],this.field[i+1][j+1],this.field[i+1][j]);\r\n        return true;\r\n    }\r\n}","import React from 'react';\r\nimport \"./marching-square.css\";\r\nimport Field from \"./Field/field\";\r\nimport { Button, Slider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'gray',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      top: 4,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: 'red',\r\n      },\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\n\r\nconst CANVAS_WIDTH=700;\r\nconst CANVAS_HEIGHT=400;\r\nconst DEFAULT_RESOLUTION=10;\r\n\r\nexport default class MarchingSquare extends React.Component{\r\n    intervalID = 0;\r\n    indexNextStep=0;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            field: new Field(1+CANVAS_HEIGHT/DEFAULT_RESOLUTION,1+CANVAS_WIDTH/DEFAULT_RESOLUTION,DEFAULT_RESOLUTION),\r\n            isRunning:false,\r\n            mouseDown: false,\r\n            resolution: DEFAULT_RESOLUTION,\r\n            isFinished:false,\r\n            index:0,\r\n        };\r\n    }\r\n\r\n    //Draws the inital Field (Only Points)\r\n    componentDidMount(){\r\n        this.state.field.drawBackGround();   \r\n    }\r\n\r\n    //Animates the Marching Square Algorithm Step by Step\r\n    drawAnimate(){\r\n        if(this.state.isFinished) return;\r\n        let index=0;\r\n        let success;\r\n        this.setState({isRunning:true});\r\n        this.intervalID = setInterval(() => {\r\n            success=this.state.field.drawAnimation(index);\r\n            index++;\r\n            if(!success) {\r\n                this.setState({isFinished:true})\r\n                this.stop();\r\n            }\r\n        },50);       \r\n    }\r\n\r\n    //Draws the Next Step of the marching square algorithm\r\n    drawNextStep(){\r\n        if(this.state.isFinished) return;\r\n        let success;\r\n        success = this.state.field.drawAnimation(this.indexNextStep);\r\n        if(!success){\r\n            this.setState({isFinished:true})\r\n            this.stop();\r\n            this.indexNextStep=0;\r\n        }\r\n        this.indexNextStep++;\r\n    }\r\n\r\n    //Computes the Marching Sqaure Algorithm in an Instant\r\n    draw(){\r\n        if(this.state.isFinished) return;\r\n        this.state.field.draw();\r\n        this.setState({isFinished:true})\r\n    }\r\n\r\n    //Stops the Animation of the Marching Square Algorithm\r\n    stop(){\r\n        clearInterval(this.intervalID);\r\n        this.setState({isRunning:false});\r\n    }\r\n\r\n    //Resets the Canvas (Draws Only the Initial Points)\r\n    reset(){\r\n        this.setState({isFinished:false})\r\n        this.state.field.drawBackGround();\r\n        this.indexNextStep=0;\r\n    }\r\n\r\n    //Handles the Resolution Change (Slider) and creates a new Field\r\n    handleResolutionChange(e, val){\r\n        this.setState({isFinished:false,resolution: val, field: new Field(Math.floor(1+CANVAS_HEIGHT/val),Math.floor(1+CANVAS_WIDTH/val),val)});\r\n        this.reset();\r\n        setTimeout(() => {\r\n            this.state.field.drawBackGround();\r\n        },10);\r\n    }\r\n\r\n    //Sets new Random Points in the Field\r\n    setRandomPoints(){\r\n        this.setState({isFinished:false,field: new Field(Math.floor(1+CANVAS_HEIGHT/this.state.resolution),Math.floor(1+CANVAS_WIDTH/this.state.resolution),this.state.resolution)});\r\n        this.reset();\r\n        setTimeout(() => {\r\n            this.state.field.drawBackGround();\r\n        },10);\r\n    }\r\n\r\n    //Handles the Mousemovement on the Canvas when Clicked, Change the Color of the points\r\n    //and if this.state.isFinished then it also computes Marching Square Algorithm\r\n    mouseMove(e){\r\n        if(!this.state.mouseDown){\r\n            return;\r\n        }\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let j= Math.round(pos.x/(this.state.resolution));\r\n        let i= Math.round(pos.y/(this.state.resolution));\r\n        this.state.field.switchCellValue(i,j, this.state.isFinished);\r\n    }\r\n\r\n    //Handles the ClickEvent on the Canvas when Clicked, Change the Color of the points\r\n    //and if this.state.isFinished then it also computes Marching Square Algorithm\r\n    onClickEvent(e){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let j= Math.round(pos.x/(this.state.resolution));\r\n        let i= Math.round(pos.y/(this.state.resolution));\r\n        this.state.field.switchCellValue(i,j, this.state.isFinished);\r\n    }\r\n\r\n    //Gets the Mouse position on the Canvas\r\n    getMousePos(canvas, evt) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    //Sets all the Cells to 1 (Background blue)\r\n    setAllpointsToBackGround(){\r\n        this.state.field.setAllCellstoBackGround();\r\n        this.reset();\r\n    }\r\n\r\n    //Sets the Variable on Mouse Down to true/ Mouse UP to false\r\n    allowSwitchColorOnMoveOnCanvas(){\r\n        this.setState({mouseDown: !this.state.mouseDown})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"marchingsquare\">\r\n                <h1>Marching Square</h1>\r\n                <Button disabled={this.state.isRunning} variant=\"outlined\" onClick={()=>this.draw()}>Fast Compute</Button>\r\n                <Button disabled={this.state.isRunning} variant=\"outlined\" onClick={()=>this.drawAnimate()}>Animate</Button>\r\n                <Button disabled={this.state.isRunning} variant=\"outlined\" onClick={()=>this.drawNextStep()}>Next Step</Button>\r\n                <Button variant=\"outlined\"onClick={()=>this.stop()}>Stop</Button>\r\n                <Button disabled={this.state.isRunning}variant=\"outlined\" onClick={()=>this.reset()}>Reset</Button>\r\n                <Button disabled={this.state.isRunning}variant=\"outlined\" color=\"Primary\" onClick={()=>this.setAllpointsToBackGround()}>All Blue</Button>\r\n                <Button disabled={this.state.isRunning}variant=\"outlined\" onClick={()=>this.setRandomPoints()}>Random Points</Button>\r\n                <div className=\"marchingsquare__speed__slider\">\r\n                    <div className=\"marchingsquare__speed__slider__label\">\r\n                        <h4>More</h4>\r\n                        <h4>Points</h4>\r\n                        <h4>Less</h4>\r\n                    </div>\r\n                    <PrettoSlider disabled={this.state.isRunning} valueLabelDisplay=\"off\"\r\n                        aria-label=\"pretto slider\" defaultValue={10} min={5} max={40} step={5}\r\n                        onChange={(e, val) => this.handleResolutionChange(e, val)}  \r\n                    />\r\n                </div>\r\n                <div className=\"marchingsquare__canvas\">\r\n                    <canvas className=\"marchingsquare_canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                          onMouseDown={()=> this.allowSwitchColorOnMoveOnCanvas()}\r\n                          onMouseUp={()=> this.allowSwitchColorOnMoveOnCanvas()}\r\n                          onMouseMove={(e) => this.mouseMove(e)}\r\n                          onClick={(e) => this.onClickEvent(e)}\r\n                    ></canvas>\r\n                </div>\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n","import './App.css';\nimport MarchingSquare from \"./Marching-Square/marching-square\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <MarchingSquare></MarchingSquare>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}